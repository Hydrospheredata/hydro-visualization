name: ci
on: pull_request

# Secrets:
#   DOCKERHUB_USERNAME - also used as the dockerhub repository url
#   DOCKERHUB_PASSWORD
 
env:
  HYDRO_SERVING_REPO: ${{ github.repository_owner }}/hydro-serving
  IMAGE: hydro-visualization # name of the built image
  REGISTRY: hydrosphere

jobs:

  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
              
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
          
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.1.0

      # Here a lot of tests
      - name: tests
        run: echo SUCCESS

  Build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
              
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
          
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.1.0

        # Update dependency
      - name: Bump sdk
        run: |
          SDK_VERSION=$(curl -Ls https://pypi.org/pypi/hydrosdk/json | jq -r '.releases | keys[]' | sort -V | tail -n 1)
          echo $SDK_VERSION
          poetry add hydrosdk=$SDK_VERSION

      - name: Install dependencies
        run: poetry install

        #Bump service version
      - name: bump version
        if: github.events.inputs.version == ''
        run: poetry version ${{ github.event.inputs.bump }}

        #Set variables
      - name: Set VERSION variable
        run: echo VERSION=$(poetry version -s) >> $GITHUB_ENV
          
      - name: Docker Login
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ github.sha }}
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}  
