openapi: 3.0.1
info:
  title: Hydro-visualization
  description: Visualiation service api description
  termsOfService: a
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://localhost/
- url: http://localhost:5000/
tags:
- name: Projection
  description: projection requests
- name: Jobs
  description: request jobs for background refitting and inference
- name: Params
  description: set/get projector parameters
paths:
  /visualization/plottable_embeddings/{method}:
    post:
      tags:
      - Projection
      summary: creates task to transform data
      parameters:
      - name: method
        in: path
        required: true
        schema:
          type: string
        description: Transformer name from ["umap", "trimap","tsne"]. For now only ["umap"].
      - name: model_version_id
        in: query
        required: true
        schema:
          type: integer
        description: ModelVersion id
      description: transformer - manifold learning transformer from ["umap", "trimap",
        "tsne"]. For now only ["umap"].
      operationId: transform
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        400:
          description: Wrong request body or method name
          content: {}
        405:
          description: Invalid input
          content: {}
        404:
          description: Model not found
          content: {}
        500:
          description: Couldn't create model/servable
          content: {}
  /visualization/jobs/{method}:
    post:
      tags:
      - Jobs
      summary: Send request to refit embedding model on new data
      parameters:
      - name: method
        in: path
        required: true
        schema:
          type: string
        description: Transformer name from ["umap", "trimap","tsne"]. For now only ["umap"].
      - name: model_version_id
        in: query
        required: true
        schema:
          type: integer
        description: ModelVersion id

      - name: refit_transformer
        in: query
        required: false
        schema:
          type: boolean
          default: true
      description: Starts job on inferencing new data or refitting transformer model.
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'

        400:
          description: Wrong request body or method name
          content: {}

    get:
      tags:
      - Jobs
      summary: Get result of fitting transformer from requests jobs/{method} and plottable_embeddings/{method}
      parameters:
      - name: method
        in: path
        required: true
        schema:
          type: string
        description: Transformer name from ["umap", "trimap","tsne"]. For now only ["umap"].
      - name: task_id
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: successfully started task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'

        404:
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'



  /visualization/params/{method}:
    post:
      tags:
      - Params
      summary: Submit new configuration
      parameters:
      - name: method
        in: path
        required: true
        schema:
          type: string
        description: Transformer name from ["umap", "trimap","tsne"]. For now only ["umap"].
      - name: model_version_id
        in: query
        required: true
        schema:
          type: integer
        description: ModelVersion id

      description: Submit new configuration
      operationId: set_params
      requestBody:
        description: |
          parameters: dict of transfomer parameters. Different set of parameters for different transformer used.
          use_labels: true if use ground truth labels from training data. Predicted labels from production data is not used because this will generate false map.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectorParameters'
        required: true
      responses:
        200:
          description: success
          content: {}
    get:
      tags:
      - Params
      summary:  Get current parameters of Projector
      parameters:
      - name: method
        in: path
        required: true
        schema:
          type: string
        description: Transformer name from ["umap", "trimap","tsne"]. For now only ["umap"].
      - name: model_version_id
        in: query
        required: true
        schema:
          type: integer
        description: ModelVersion id
      operationId: get_params
      responses:
        200:
          description: success
          content:
           application/json:
            schema:
              $ref: '#/components/schemas/ProjectorParameters'


  /visualization/supported:
    get:
      tags:
      - Helper
      parameters:
      - name: model_version_id
        in: query
        required: true
        schema:
          type: integer
        description: ModelVersion id
      responses:
        200:
          description: Analyzed model
          content:
            application/json:
              schema:
                type: object
                properties:
                  supported:
                    type: boolean
                  message:
                    description: Explanation why not supported, if supported, then empty
                    type: string



components:
  schemas:
    TransformerProperties:
      type: object
      properties:
        metric:
          type: string
          allOf:
            - $ref: '#/components/schemas/TransformerPropertiresMetrics'
        min_dist:
          type: number
        n_components:
          type: integer
        n_neighbours:
          type: integer

    TransformerPropertiresMetrics:
      type: string
      enum:
      - euclidean
      - manhattan
      - chebyshev
      - minkowski
      - canberra
      - braycurtis
      - haversine
      - mahalanobis
      - wminkowski
      - seuclidean
      - cosine
      - correlation
      - hamming
      - jaccard
      - dice
      - russellrao
      - kulsinski
      - rogerstanimoto
      - sokalmichener
      - sokalsneath
      - yule

    ProjectorParameters:
      type: object
      properties:
        properties:
          type: object
          allOf:
            - $ref: '#/components/schemas/TransformerProperties'
        production_data_sample_size:
          type: integer
        training_data_sample_size:
          type: integer
        visualization_metrics:
          type: array
          items:
            allOf:
             - $ref: '#/components/schemas/VisualizationMetrics'


    TaskStates:
      type: string
      enum:
      - PENDING
      - STARTED
      - SUCCESS
      - NOT_SUPPORTED
      - ERROR
      - NO_DATA

    VisualizationMetrics:
      type: string
      enum:
      - global_score
      - sammon_error
      - auc_score
      - stability_score
      - msid
      - clustering


    OneOutputInfo:
      type: object
      properties:
        coloring_type:
          type: string
        data:
          type: array
          items:
            anyOf:
              - type: number
              - type: string
              - type: integer
        dtype:
          type: integer
        classes:
          anyOf:
              - type: number
              - type: string
              - type: integer
      required:
        - coloring_type
        - data
        - dtype


    TaskResponse:
      type: object
      properties:
        task_id:
          type: string
      required:
        - task_id
    PlottableResult:
      type: object
      required:
        - data_shape
        - data
        - request_ids
        - class_labels
        - visualization_metrics
        - top_N
        - counterfactuals
      properties:
        data_shape:
          type: array
          items:
            type: integer
        data:
          type: array
          items:
            type: object
        training_data_shape:
          type: array
          items:
            type: integer
        training_data:
          type: array
          items:
            type: object
        request_ids:
          type: array
          items:
            type: integer
        output_info:
          type: object
          description: key is output name, value is it's info - values, coloring and dtype
          additionalProperties:
             $ref: '#/components/schemas/OneOutputInfo'
        visualization_metrics:
          type: object
          properties:
            anomality:
              type: object
              properties:
                scores:
                  type: array
                  items:
                    type: number
                threshold:
                  type: number
                operation:
                  type: string
        top_N:
          type: array
          items:
            type: array
            items:
              type: integer
        counterfactuals:
          type: array
          items:
            type: array
            items:
              type: integer


    TaskResult:
      type: object
      properties:
        result:
          type: object
          $ref: '#/components/schemas/PlottableResult'
        state:
          type: string
          $ref: '#/components/schemas/TaskStates'
        task_id:
          type: string
        message:
          type: string
      required:
      - state
      - task_id
